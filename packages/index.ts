export interface IQAQ {
  classic: string[]
  happy: string[]
  sadness: string[]
  angry: string[]
  surprised: string[]
}

export const QAQ: IQAQ = {
  happy: [
    '( ﹡ˆoˆ﹡ )',
    '(◦˙▽˙◦)',
    '(*σ´∀`)σ',
    '(◕ˇ∀ˇ◕)',
    'ヾ(´∀｀。ヾ)',
    '੭ ᐕ)੭*⁾⁾',
    'ヾ(✿ﾟ▽ﾟ)ノ',
    '(*^ω^*)',
    '(=^▽^=)',
    ' (*^▽^*) ',
    ' (-^〇^-) ',
    '╮(‵▽′)╭',
    'ヾ(^▽^*)))',
    '╰(*´︶`*)╯',
    '٩(๑^o^๑)۶',
    '✧٩(ˊωˋ*)و✧',
    '(*˘︶˘*).。.:*♡',
    '(*๓´╰╯`๓)♡',
    '✧*。٩(ˊωˋ*)و✧*。',
    'ヾ(@^▽^@)ノ ',
    ' o((*^▽^*))o ',
    'Ｏ(≧▽≦)Ｏ ',
    '(´▽｀)ノ♪',
    '( ^３^ )╱~~　',
    '(/≧▽≦)/~┴┴ ',
    ' o(*≧▽≦)ツ ~ ┴┴',
    '(￣y▽￣)~*',
    '٩(●´৺`●)૭٩(●´৺`●)و',
    '.ヽ(^Д^*)/. ',
    '(≧ω≦)/',
    '*(^o^)/*',
    'ヽ(*^^*)ノ',
    '（∩▽∩）',
    '（∩△∩）',
    '(*｀▽´*)',
    ' (*≧▽≦) ',
    'ヾ(≧∪≦*)ノ〃',
    ' (☆^ー^☆) ',
    '＼(＠＾０＾＠)/♪',
    'o(＊＾▽＾＊)o♪',
    '',
  ],
  angry: [
    'o(´^｀)o',
    'ᕙ(`▿´)ᕗ',
    '(｡･ˇ_ˇ･｡:)',
    'm9( ｀д´ )!!!!',
    '( ･_･)ﾉ⌒●~*',
    '( \'-\' )ノ)`-\' )',
    '(ﾉ｀⊿´)ﾉ',
    '（｀Δ´）ゞ',
    '(◦`~´◦)',
    '(งᵒ̌皿ᵒ̌)ง⁼³₌₃',
    '｢(ﾟﾍﾟ)',
    '(｡ì _ í｡)',
    '(o｀ε´o)',
    '( ´ﾟжﾟ｀ )',
    '(＊｀д´)',
    '(乂｀д´)',
    '(;｀O´)o',
    '(。・`ω´・)',
    '(｀⌒´メ)',
    '(•̀へ •́ ╮ )',
    '(•́へ•́ ╬)',
    '(;｀O´)o',
    '٩(๑`^´๑)۶',
    'o(｀ω´*)o',
    '(ノ｀⊿´)ノ',
    '（╯－＿－）╯╧╧',
    '（╯‵□′）╯︵┴─┴',
    'ヾ(。｀Д´。)ノ彡',
    's(・｀ヘ´・;)ゞ',
    'o(#￣▽￣)==O))￣0￣")o ',
    'o(*≧д≦)o!!',
    '╰（‵□′）╯',
    '┴─┴︵╰（‵□′╰）',
    '',
  ],
  sadness: [
    '( ๑ŏ ﹏ ŏ๑ )',
    '(⋟﹏⋞)',
    '( 。ớ ₃ờ)ھ',
    '( ‘-ωก̀ )',
    '(´ . .̫ . `)',
    '(˘̩̩̩ε˘̩ƪ)',
    '(╥╯﹏╰╥)ง',
    '┌(┌ ､ﾝ､)┐',
    '(•̩̩̩̩＿•̩̩̩̩)',
    '( p′︵‵。)',
    '(╥_╥)',
    '(-̩̩̩-̩̩̩-̩̩̩-̩̩̩-̩̩̩___-̩̩̩-̩̩̩-̩̩̩-̩̩̩-̩̩̩)',
    '˚‧º·(˚ ˃̣̣̥᷄⌓˂̣̣̥᷅ )‧º·˚',
    '(｡í _ ì｡)',
    '(ಥ﹏ಥ) ',
    '( ´•̥̥̥ω•̥̥̥` )',
    '(っ╥╯﹏╰╥c)',
    '(Ｔ▽Ｔ)',
    '( ‘-ωก̀ )',
    ' o(╥﹏╥)o ',
    'ε(┬┬﹏┬┬)3 ',
    '˃̣̣̥᷄⌓˂̣̣̥᷅',
  ],
  surprised: [
    '(•\'╻\'• )꒳ᵒ꒳ᵎᵎᵎ',
    'Σ(ŎдŎ|||)ﾉﾉ',
    '(ﾟ⊿ﾟ)ﾂ',
    'ε=ε=ε=(ﾟ◇ﾟﾉ)ﾉ',
    'Σ(ﾟ∀ﾟﾉ)ﾉ',
    '=͟͟͞͞=͟͟͞͞(●⁰ꈊ⁰● |||)',
    'Σ( ° △ °|||)︴',
    '((유∀유|||))',
    '∑(°口°๑)❢❢',
    '(•\'╻\'• ۶)۶',
    '∑(❍ฺд❍ฺlll)',
    'ԅ(✧_✧ԅ)',
    '=͟͟͞͞(꒪ᗜ꒪ ‧̣̥̇)',
    '!!!!=͟͟͞͞(๑ò◊ó ﾉ)ﾉ',
    'ﾞ━=͟͟͞͞(Ŏ◊Ŏ ‧̣̥̇)',
    '(*ﾟﾛﾟ)!!',
    'Σ(°Д°;',
    '∑(￣□￣;)',
    'Σ（OдO‖) Σ(☆д◎川）ノ！ ',
    '"(º Д º*)',
  ],
  classic: [
    '+_+',
    '^o^',
    '^_^',
    '´_>`',
    '$_$',
    'T^T',
    '-_-#',
    '(T_T)',
    '=_=',
    '→_→',
    '←_←',
    '( ˙-˙ )',
    'Y(^_^)Y',
    '(●.●)',
    '(●_●)',
    '（￣～￣）',
    '(●︿●)',
    '(^O^)',
    'O(∩_∩)O~~',
    '(≧▽≦)/',
    ' ^_^ ',
    '(☆_☆)',
    ':)',
    ':-)',
    ';-)',
    ':-D',
    ':( ',
    ':P',
    ' =) ',
    ':-D',
    ':( ',
    ':P',
    '',
  ],
}

export function getQAQ<T extends keyof IQAQ>(key?: T): any {
  if (key) {
    return QAQ[key]
  }
  return QAQ
}

export function getRandomQAQ(key: keyof IQAQ, num = 1) {
  const result: string[] = []
  const item = QAQ[key]
  for (let i = 1; i <= num; i++) {
    const random = Math.floor(Math.random() * item.length)
    result.push(item[random])
  }

  return result
}
